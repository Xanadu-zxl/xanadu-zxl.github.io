import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as t,j as e}from"./app-CfT7vpBI.js";const a={},n=e(`<h2 id="_3-1-块级元素" tabindex="-1"><a class="header-anchor" href="#_3-1-块级元素"><span>3.1 块级元素</span></a></h2><ul><li>由于“块级元素”具有换行特性，因此理论上它都可以配合 clear 属性来清除浮动带来的影响</li><li><code>&lt;div&gt;,&lt;li&gt;,&lt;table&gt;</code>:符合块级元素的基本特征，也就是一个水平流上只能单独显示一个元素，多个块级元素则换行显示。</li></ul><h2 id="_3-2-1-width-auto" tabindex="-1"><a class="header-anchor" href="#_3-2-1-width-auto"><span>3.2.1 width:auto</span></a></h2><ol><li>100%于父级宽度</li><li>包裹性</li><li>收缩到最小:min-content</li><li>超出容器限制:设置 white-space:nowrap;属性后--无视父级宽度,叫做 max-content; <strong>无宽度 流体布局</strong> *宽度分离</li></ol><h3 id="box-sizing" tabindex="-1"><a class="header-anchor" href="#box-sizing"><span>box-sizing</span></a></h3><p>*box-sizing&gt;&gt; 原生普通文本框<code>&lt;input&gt;</code>和文本域<code>&lt;textarea&gt;</code> *box-sizing 被发明出来最大的初衷应该是解决替换元素宽度自适应问</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">input</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">textarea</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">video</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  box-sizing: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">border-box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-2-6-height-auto" tabindex="-1"><a class="header-anchor" href="#_3-2-6-height-auto"><span>3.2.6 height:auto</span></a></h2><p>使元素支持 height:100%;效果</p><ol><li>设定显示高度</li><li>使用绝对定位 绝对定位元素的百分比计算和非绝对定位元素的百分比计算是有区别的，区: 在于绝对定位的宽高百分比计算是相对于 padding box 的，也就是说会把 padding 大小值计算在内，但是，非绝对定位元素则是相对于 content box 计算的</li></ol><h2 id="_3-3-min-max-width-height" tabindex="-1"><a class="header-anchor" href="#_3-3-min-max-width-height"><span>3.3 min,max--width--height:</span></a></h2><ul><li>min-width/max-width 出现的场景一定是自适应布局或者流体布局中; 尺寸会有大有小，为了避免图片在移动端展示过大影响体验，常常会有下面的 max-width 限制：</li></ul><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  max-width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  height: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">auto</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> !important</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">height: auto 是必需的， - 否则，如果原始图片有设定height，</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-width</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 生效的时候，图片就会被水平压缩。 - 强制 height 为</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  auto可以确保宽度不超出的同时使图片保持原来的比例。但这样也会有体验上的问题，那就是在加载时图片占据高度会从 0 - 变成计算高度，图文会有明显的瀑布式下落。;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>max-width 和 max-height 的初始值是 none，</li><li>min-width 和 min-height 的初始值是 auto</li><li>超越最大!important max-width 会覆盖 width</li><li>最小宽度大于最大宽度最小宽度胜利;</li></ul><h3 id="_3-3-4-任意高度元素的展开收起动画技术" tabindex="-1"><a class="header-anchor" href="#_3-3-4-任意高度元素的展开收起动画技术"><span>3.3.4 任意高度元素的展开收起动画技术</span></a></h3>`,15),l=[n];function h(d,r){return t(),s("div",null,l)}const c=i(a,[["render",h],["__file","CSS进阶.html.vue"]]),g=JSON.parse('{"path":"/CSS/CSS%E8%BF%9B%E9%98%B6.html","title":"CSS 进阶","lang":"zh-CN","frontmatter":{"title":"CSS 进阶","date":"2021-03-09T11:30:52.000Z","tags":"CSS","categories":["学习笔记"],"description":"3.1 块级元素 由于“块级元素”具有换行特性，因此理论上它都可以配合 clear 属性来清除浮动带来的影响 <div>,<li>,<table>:符合块级元素的基本特征，也就是一个水平流上只能单独显示一个元素，多个块级元素则换行显示。 3.2.1 width:auto 100%于父级宽度 包裹性 收缩到最小:min-content 超出容器限制:设置...","head":[["meta",{"property":"og:url","content":"https://github.com/zxl7/zxl7.github.io/CSS/CSS%E8%BF%9B%E9%98%B6.html"}],["meta",{"property":"og:site_name","content":"逆水行舟丨"}],["meta",{"property":"og:title","content":"CSS 进阶"}],["meta",{"property":"og:description","content":"3.1 块级元素 由于“块级元素”具有换行特性，因此理论上它都可以配合 clear 属性来清除浮动带来的影响 <div>,<li>,<table>:符合块级元素的基本特征，也就是一个水平流上只能单独显示一个元素，多个块级元素则换行显示。 3.2.1 width:auto 100%于父级宽度 包裹性 收缩到最小:min-content 超出容器限制:设置..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-01T14:31:04.000Z"}],["meta",{"property":"article:author","content":"逆水行舟丨"}],["meta",{"property":"article:published_time","content":"2021-03-09T11:30:52.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-01T14:31:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS 进阶\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-09T11:30:52.000Z\\",\\"dateModified\\":\\"2024-09-01T14:31:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"逆水行舟丨\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"3.1 块级元素","slug":"_3-1-块级元素","link":"#_3-1-块级元素","children":[]},{"level":2,"title":"3.2.1 width:auto","slug":"_3-2-1-width-auto","link":"#_3-2-1-width-auto","children":[{"level":3,"title":"box-sizing","slug":"box-sizing","link":"#box-sizing","children":[]}]},{"level":2,"title":"3.2.6 height:auto","slug":"_3-2-6-height-auto","link":"#_3-2-6-height-auto","children":[]},{"level":2,"title":"3.3 min,max--width--height:","slug":"_3-3-min-max-width-height","link":"#_3-3-min-max-width-height","children":[{"level":3,"title":"3.3.4 任意高度元素的展开收起动画技术","slug":"_3-3-4-任意高度元素的展开收起动画技术","link":"#_3-3-4-任意高度元素的展开收起动画技术","children":[]}]}],"git":{"createdTime":1725185369000,"updatedTime":1725201064000,"contributors":[{"name":"zxl7","email":"zhengxuelin@yhbj.cn","commits":1}]},"readingTime":{"minutes":1.9,"words":571},"filePathRelative":"CSS/CSS进阶.md","localizedDate":"2021年3月9日","excerpt":"<h2>3.1 块级元素</h2>\\n<ul>\\n<li>由于“块级元素”具有换行特性，因此理论上它都可以配合 clear 属性来清除浮动带来的影响</li>\\n<li><code>&lt;div&gt;,&lt;li&gt;,&lt;table&gt;</code>:符合块级元素的基本特征，也就是一个水平流上只能单独显示一个元素，多个块级元素则换行显示。</li>\\n</ul>\\n<h2>3.2.1 width:auto</h2>\\n<ol>\\n<li>100%于父级宽度</li>\\n<li>包裹性</li>\\n<li>收缩到最小:min-content</li>\\n<li>超出容器限制:设置 white-space:nowrap;属性后--无视父级宽度,叫做 max-content;\\n<strong>无宽度 流体布局</strong> *宽度分离</li>\\n</ol>","autoDesc":true}');export{c as comp,g as data};
